{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;AAOM,MAAOA,YAAY;AAAZA,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCPzBE,uDAAA,iBAAyB;MAEzBA,4DAAA,aAAuB;MAEnBA,uDAAA,oBAA+B;MACjCA,0DAAA,EAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL4C;AAEX;AACa;AAEX;AACa;AACG;AAC4B;;AAQrF,MAAOU,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,SAAA,GAFRpB,wDAAY;AAAA;AAEbmB,SAAS;YAJVJ,oEAAa,EAAED,uDAAW,EAAED,kEAAgB,EAAEI,wEAAgB;AAAA;;sHAI7DE,SAAS;IAAAE,YAAA,GALLrB,wDAAY,EAAEgB,qEAAe,EAAEE,oGAAuB;IAAAI,OAAA,GAC3DP,oEAAa,EAAED,uDAAW,EAAED,kEAAgB,EAAEI,wEAAgB;EAAA;AAAA;;;;;;;;;;;;;;;;ACLpE,MAAOD,eAAe;EAE1BO,YAAA,GAAgB;EAEhBC,QAAQA,CAAA,GACR;;AALWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAf,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAoB,yBAAAlB,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP5BE,4DAAA,aAAQ;MAGEA,oDAAA,wBAAY;MAAAA,0DAAA,EAAK;MAErBA,4DAAA,aAAsB;MAIRA,oDAAA,mBAAM;MAAAA,0DAAA,EAAO;MAIvBA,4DAAA,aAAuC;MAE7BA,oDAAA,gBAAQ;MAAAA,0DAAA,EAAO;MAIzBA,4DAAA,aAAuC;MAE7BA,oDAAA,eAAO;MAAAA,0DAAA,EAAO;;;;;;;;;;;;;;;;;;;;;ACpBqB;AACqC;;;AAE5F,MAAMmB,MAAM,GAAW,CAAC;EACtBC,IAAI,EAAE,iBAAiB;EAAEC,SAAS,EAAEZ,oGAAuBA;CAC5D,CAAC;AAMI,MAAOD,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YAHjBU,iEAAoB,CAACC,MAAM,CAAC,EAC5BD,yDAAY;AAAA;;sHAEXV,gBAAgB;IAAAK,OAAA,GAAAU,yDAAA;IAAAC,OAAA,GAFjBN,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;ACVlB,MAAOO,aAAa;EAKxBX,YAAYY,IAAY,EAAEC,UAAkB,EAAEC,cAAsB;IAClE,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,UAAU,GAAG;MAChBE,IAAI,EAAEF,UAAU;MAChBG,IAAI,EAAE,KAAK;MACXC,MAAM,EAAE;KACT;IACD,IAAI,CAACH,cAAc,GAAG;MACpBC,IAAI,EAAED,cAAc;MACpBE,IAAI,EAAE,KAAK;MACXC,MAAM,EAAE;KACT;EACH;EAEAC,QAAQA,CAACC,QAAkB;IACzB,OAAO,IAAI,CAACC,MAAM,CAACD,QAAQ,CAAC,GAAGA,QAAQ,CAACJ,IAAI,GAAG,GAAG;EACpD;EAEAM,MAAMA,CAACF,QAAkB;IACvBA,QAAQ,CAACH,IAAI,GAAG,CAACG,QAAQ,CAACH,IAAI;EAChC;EAEAI,MAAMA,CAACD,QAAkB;IACvB,OAAOA,QAAQ,CAACH,IAAI;EACtB;EAEAM,KAAKA,CAACH,QAAkB;IACtB,OACEA,QAAQ,CAACF,MAAM,KAAK,IAAI,IACxBE,QAAQ,CAACJ,IAAI,CAACQ,WAAW,EAAE,CAACC,IAAI,EAAE,KAChCL,QAAQ,CAACF,MAAM,CAACM,WAAW,EAAE,CAACC,IAAI,EAAE;EAE1C;;;;;;;;;;;;;;;;;;;;;;;;;ICVQtC,4DAAA,eAA6C;IAAAA,oDAAA,GAAkC;IAAAA,0DAAA,EAAO;;;;IAAzCA,uDAAA,GAAkC;IAAlCA,+DAAA,CAAAyC,OAAA,CAAAT,QAAA,CAAAS,OAAA,CAAAd,UAAA,EAAkC;;;;;;IAC/E3B,4DAAA,WAA2B;IACNA,wDAAA,2BAAA2C,6EAAAC,MAAA;MAAA5C,2DAAA,CAAA8C,IAAA;MAAA,MAAAL,OAAA,GAAAzC,2DAAA,GAAAgD,SAAA;MAAA,OAAahD,yDAAA,CAAAyC,OAAA,CAAAd,UAAA,CAAAI,MAAA,GAAAa,MAAA,CACvC;IAAA,EAD8D;IAAvD5C,0DAAA,EACwF;;;;;IADrEA,uDAAA,GAAoC;IAApCA,wDAAA,YAAAyC,OAAA,CAAAd,UAAA,CAAAI,MAAA,CAAoC,aAAAoB,MAAA,CAAAC,eAAA,QAAAX,OAAA,CAAAL,KAAA,CAAAK,OAAA,CAAAd,UAAA;;;;;IAKzD3B,4DAAA,eAA6C;IAAAA,oDAAA,GAAsC;IAAAA,0DAAA,EAAO;;;;IAA7CA,uDAAA,GAAsC;IAAtCA,+DAAA,CAAAyC,OAAA,CAAAT,QAAA,CAAAS,OAAA,CAAAb,cAAA,EAAsC;;;;;;IACnF5B,4DAAA,WAA2B;IACNA,wDAAA,2BAAAqD,6EAAAT,MAAA;MAAA5C,2DAAA,CAAAsD,IAAA;MAAA,MAAAb,OAAA,GAAAzC,2DAAA,GAAAgD,SAAA;MAAA,OAAahD,yDAAA,CAAAyC,OAAA,CAAAb,cAAA,CAAAG,MAAA,GAAAa,MAAA,CACtC;IAAA,EADiE;IAA3D5C,0DAAA,EAC0F;;;;;IADvEA,uDAAA,GAAwC;IAAxCA,wDAAA,YAAAyC,OAAA,CAAAb,cAAA,CAAAG,MAAA,CAAwC,aAAAwB,MAAA,CAAAH,eAAA,QAAAX,OAAA,CAAAL,KAAA,CAAAK,OAAA,CAAAb,cAAA;;;;;;IAZjE5B,4DAAA,SAA+B;IACzBA,oDAAA,GAAa;IAAAA,0DAAA,EAAK;IACtBA,4DAAA,YAA4C;IAAxCA,wDAAA,mBAAAwD,2DAAA;MAAA,MAAAC,WAAA,GAAAzD,2DAAA,CAAA0D,IAAA;MAAA,MAAAjB,OAAA,GAAAgB,WAAA,CAAAT,SAAA;MAAA,MAAAW,OAAA,GAAA3D,2DAAA;MAAA,OAASA,yDAAA,CAAA2D,OAAA,CAAAxB,MAAA,CAAAM,OAAA,EAAAA,OAAA,CAAAd,UAAA,CAA6B;IAAA,EAAC;IACzC3B,wDAAA,IAAA6D,6CAAA,kBAAsF;IACtF7D,wDAAA,IAAA8D,6CAAA,mBAGO;IACT9D,0DAAA,EAAK;IACLA,4DAAA,YAAgD;IAA5CA,wDAAA,mBAAA+D,2DAAA;MAAA,MAAAN,WAAA,GAAAzD,2DAAA,CAAA0D,IAAA;MAAA,MAAAjB,OAAA,GAAAgB,WAAA,CAAAT,SAAA;MAAA,MAAAgB,OAAA,GAAAhE,2DAAA;MAAA,OAASA,yDAAA,CAAAgE,OAAA,CAAA7B,MAAA,CAAAM,OAAA,EAAAA,OAAA,CAAAb,cAAA,CAAiC;IAAA,EAAC;IAC7C5B,wDAAA,IAAAiE,6CAAA,kBAA0F;IAC1FjE,wDAAA,IAAAkE,6CAAA,mBAGO;IACTlE,0DAAA,EAAK;;;;;IAdDA,uDAAA,GAAa;IAAbA,+DAAA,CAAAyC,OAAA,CAAAf,IAAA,CAAa;IAES1B,uDAAA,GAAmB;IAAnBA,wDAAA,UAAAmE,MAAA,CAAAC,YAAA,CAAmB;IACpCpE,uDAAA,GAAkB;IAAlBA,wDAAA,SAAAmE,MAAA,CAAAC,YAAA,CAAkB;IAMDpE,uDAAA,GAAmB;IAAnBA,wDAAA,UAAAmE,MAAA,CAAAC,YAAA,CAAmB;IACpCpE,uDAAA,GAAkB;IAAlBA,wDAAA,SAAAmE,MAAA,CAAAC,YAAA,CAAkB;;;;;;IASjCpE,4DAAA,gBAAsD;IAAzBA,wDAAA,mBAAAqE,mEAAA;MAAArE,2DAAA,CAAAsE,IAAA;MAAA,MAAAC,OAAA,GAAAvE,2DAAA;MAAA,OAASA,yDAAA,CAAAuE,OAAA,CAAAC,YAAA,EAAc;IAAA,EAAC;IAACxE,oDAAA,qBAAc;IAAAA,0DAAA,EAAS;;;ACnCzE,MAAOS,uBAAuB;EAKlCK,YAAoB2D,qBAA4C;IAA5C,KAAAA,qBAAqB,GAArBA,qBAAqB;IAJzC,KAAAC,KAAK,GAAoB,EAAE;IAC3B,KAAAN,YAAY,GAAY,KAAK;IAC7B,KAAAhB,eAAe,GAAY,KAAK;EAEmC;EAEnErC,QAAQA,CAAA;IACN,IAAI,CAAC4D,IAAI,EAAE;EACb;EAEQA,IAAIA,CAAA;IACV,IAAI,CAACF,qBAAqB,CACvBG,QAAQ,EAAE,CACVC,SAAS,CAAEC,IAAI,IAAM,IAAI,CAACJ,KAAK,GAAGI,IAAK,CAAC;EAC7C;EAEA3C,MAAMA,CAACN,IAAmB,EAAEkD,IAAc;IACxClD,IAAI,CAACM,MAAM,CAAC4C,IAAI,CAAC;EACnB;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACL,IAAI,EAAE;IACX,IAAI,CAACvB,eAAe,GAAG,KAAK;EAC9B;EAEAoB,YAAYA,CAAA;IACV,IAAIS,MAAM,GAAG,IAAI,CAACP,KAAK,CAACQ,MAAM,CAC5B,CAACC,GAAG,EAAEtD,IAAI,KAAI;MACZ,IAAIuD,KAAK,GAAG,CAAC;QACXC,KAAK,GAAG,CAAC;MAEX,IAAIxD,IAAI,CAACO,KAAK,CAACP,IAAI,CAACF,UAAU,CAAC,EAAE;QAC/ByD,KAAK,EAAE;OACR,MAAM;QACLC,KAAK,EAAE;;MAGT,IAAIxD,IAAI,CAACO,KAAK,CAACP,IAAI,CAACD,cAAc,CAAC,EAAE;QACnCwD,KAAK,EAAE;OACR,MAAM;QACLC,KAAK,EAAE;;MAET,OAAO,CAACF,GAAG,CAAC,CAAC,CAAC,GAAGC,KAAK,EAAED,GAAG,CAAC,CAAC,CAAC,GAAGE,KAAK,CAAC;IACzC,CAAC,EACD,CAAC,CAAC,EAAE,CAAC,CAAC,CACP;IAEDC,KAAK,CAAC,WAAWL,MAAM,CAAC,CAAC,CAAC,yBAAyBA,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC;IACrE,IAAI,CAAC7B,eAAe,GAAG,IAAI;EAC7B;;AAlDW3C,uBAAuB;mBAAvBA,uBAAuB,EAAAT,+DAAA,CAAAuB,0EAAA;AAAA;AAAvBd,uBAAuB;QAAvBA,uBAAuB;EAAAjB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAA6F,iCAAA3F,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MDTpCE,4DAAA,gBAA0B;MACFA,oDAAA,sBAAe;MAAAA,0DAAA,EAAK;MAC1CA,4DAAA,WAAqB;MACnBA,oDAAA,yMACF;MAAAA,0DAAA,EAAI;MAGNA,4DAAA,aAAkB;MAGWA,wDAAA,2BAAA0F,gEAAA9C,MAAA;QAAA,OAAA7C,GAAA,CAAAqE,YAAA,GAAAxB,MAAA;MAAA,EAA0B,mBAAA+C,wDAAA;QAAA,OAAU5F,GAAA,CAAAiF,gBAAA,EAAkB;MAAA,EAA5B;MAAjDhF,0DAAA,EAA+E;MAC/EA,oDAAA,oBACF;MAAAA,0DAAA,EAAQ;MAGVA,4DAAA,gBAAyB;MAGfA,oDAAA,kBAAU;MAAAA,0DAAA,EAAK;MACnBA,4DAAA,UAAI;MAAAA,oDAAA,mBAAW;MAAAA,0DAAA,EAAK;MACpBA,4DAAA,UAAI;MAAAA,oDAAA,uBAAe;MAAAA,0DAAA,EAAK;MAG5BA,4DAAA,aAAO;MACLA,wDAAA,KAAA4F,sCAAA,gBAgBK;MACP5F,0DAAA,EAAQ;MAGVA,wDAAA,KAAA6F,0CAAA,oBAA6E;MAC/E7F,0DAAA,EAAM;;;MAnCuBA,uDAAA,GAA0B;MAA1BA,wDAAA,YAAAD,GAAA,CAAAqE,YAAA,CAA0B;MAc5BpE,uDAAA,IAAQ;MAARA,wDAAA,YAAAD,GAAA,CAAA2E,KAAA,CAAQ;MAoBxB1E,uDAAA,GAAkB;MAAlBA,wDAAA,SAAAD,GAAA,CAAAqE,YAAA,CAAkB;;;;;;;;;;;;;;;;;;;;;;;AEzCQ;AACiB;;;AAOhD,MAAOoB,qBAAqB;EAChCZ,QAAQA,CAAA;IACN,OAAO,IAAI,CAACmB,IAAI,CACbC,GAAG,CAAqB,6BAA6B,CAAC,CACtDC,IAAI,CACHH,mDAAG,CAAEI,KAAK,IACRA,KAAK,CAACxB,KAAK,CACRoB,GAAG,CAAEK,CAAC,IAAK,IAAI1E,+DAAa,CAAC0E,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAC/CC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC,CACnC,CACF;EACL;EAEAxF,YAAoBiF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;;AAb5BP,qBAAqB;mBAArBA,qBAAqB,EAAAxF,sDAAA,CAAAuB,4DAAA;AAAA;AAArBiE,qBAAqB;SAArBA,qBAAqB;EAAAiB,OAAA,EAArBjB,qBAAqB,CAAAkB,IAAA;EAAAC,UAAA,EADR;AAAM;;;;;;;;;;;;;;ACVhC;AACA;AACA;AAEO,MAAMC,WAAW,GAAG;EACzBC,UAAU,EAAE;CACb;AAED;;;;;;;AAOA;;;;;;;;;;;;;;;;ACf+C;AAGF;AACY;AAEzD,IAAID,6EAAsB,EAAE;EAC1BE,6DAAc,EAAE;;AAGlBC,sEAAA,EAAwB,CAACE,eAAe,CAACvG,sDAAS,CAAC,CAChDwG,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/routes/app-routing.module.ts","./src/app/view/irregular-verbs/IrregularVerb.class.ts","./src/app/view/irregular-verbs/irregular-verbs.component.html","./src/app/view/irregular-verbs/irregular-verbs.component.ts","./src/app/view/irregular-verbs/irregularVerbs.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","<app-header></app-header>\n\n<div class=\"container\">\n  <section class=\"pt-5\">\n    <router-outlet></router-outlet>\n  </section>\n</div>","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { AppRoutingModule } from './routes/app-routing.module';\nimport { IrregularVerbsComponent } from './view/irregular-verbs/irregular-verbs.component';\n\n@NgModule({\n  declarations: [AppComponent, HeaderComponent, IrregularVerbsComponent],\n  imports: [BrowserModule, FormsModule, HttpClientModule, AppRoutingModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header>\n  <nav class=\"navbar navbar-expand td-navbar\">\n    <div class=\"container\">\n      <h2>Lucas Câmara</h2>\n      \n      <div id=\"main_navbar\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item mr-4 mb-2 mb-lg-0\">\n            <a class=\"nav-link\" href=\"#\">\n              <span>Início</span>\n            </a>\n          </li>\n          \n          <li class=\"nav-item mr-4 mb-2 mb-lg-0\">\n            <a class=\"nav-link\" href=\"#\">\n              <span>Projetos</span>\n            </a>\n          </li>\n\n          <li class=\"nav-item mr-4 mb-2 mb-lg-0\">\n            <a class=\"nav-link\" href=\"#\">\n              <span>Contato</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n</header>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { IrregularVerbsComponent } from '../view/irregular-verbs/irregular-verbs.component';\n\nconst routes: Routes = [{\n  path: 'irregular-verbs', component: IrregularVerbsComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export class IrregularVerb {\n  base: string;\n  pastSimple: VerbForm;\n  pastParticiple: VerbForm;\n\n  constructor(base: string, pastSimple: string, pastParticiple: string) {\n    this.base = base;\n    this.pastSimple = {\n      verb: pastSimple,\n      show: false,\n      answer: null,\n    };\n    this.pastParticiple = {\n      verb: pastParticiple,\n      show: false,\n      answer: null,\n    };\n  }\n\n  getValue(verbForm: VerbForm): string {\n    return this.isShow(verbForm) ? verbForm.verb : '?';\n  }\n\n  toggle(verbForm: VerbForm) {\n    verbForm.show = !verbForm.show;\n  }\n\n  isShow(verbForm: VerbForm): boolean {\n    return verbForm.show;\n  }\n\n  check(verbForm: VerbForm): boolean {\n    return (\n      verbForm.answer !== null &&\n      verbForm.verb.toLowerCase().trim() ===\n        verbForm.answer.toLowerCase().trim()\n    );\n  }\n}\n\nexport interface VerbForm {\n  verb: string;\n  show: boolean;\n  answer: string | null;\n}\n","<header class=\"py-4 mt-4\">\n  <h1 class=\"display-4\">Irregular Verbs</h1>\n  <p class=\"lead mb-0\">\n    You can use the default mode by clicking on the cell to reveal the corresponding content for each verb (click again to hide it), or use the answer mode to type the verbs and check the results.\n  </p>\n</header>\n\n<div class=\"py-4\">\n  <div>\n    <label>\n      <input type=\"checkbox\" [(ngModel)]=\"questionMode\" (click)=\"initQuestionMode()\">\n      Answer Mode\n    </label>\n  </div>\n  \n  <table class=\"tbl-verbs\">\n    <thead>\n      <tr>\n        <td>Infinitive</td>\n        <td>Past Simple</td>\n        <td>Past Participle</td>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let verb of verbs\">\n        <td>{{verb.base}}</td>\n        <td (click)=\"toggle(verb, verb.pastSimple)\">\n          <span class=\"question\" *ngIf=\"!questionMode\">{{verb.getValue(verb.pastSimple)}}</span>\n          <span *ngIf=\"questionMode\">\n            <input type=\"text\" [(ngModel)]=\"verb.pastSimple.answer\" \n              [ngClass]=\"!questionChecked ? '' : verb.check(verb.pastSimple) ? 'success' : 'wrong'\">\n          </span>\n        </td>\n        <td (click)=\"toggle(verb, verb.pastParticiple)\">\n          <span class=\"question\" *ngIf=\"!questionMode\">{{verb.getValue(verb.pastParticiple)}}</span>\n          <span *ngIf=\"questionMode\">\n            <input type=\"text\" [(ngModel)]=\"verb.pastParticiple.answer\"\n            [ngClass]=\"!questionChecked ? '' : verb.check(verb.pastParticiple) ? 'success' : 'wrong'\">\n          </span>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <button *ngIf=\"questionMode\" (click)=\"checkAnswers()\">Check answers!</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { IrregularVerb, VerbForm } from './IrregularVerb.class';\nimport { IrregularVerbsService } from './irregularVerbs.service';\n\n@Component({\n  selector: 'app-irregular-verbs',\n  templateUrl: './irregular-verbs.component.html',\n  styleUrls: ['./irregular-verbs.component.css'],\n})\nexport class IrregularVerbsComponent implements OnInit {\n  verbs: IrregularVerb[] = [];\n  questionMode: boolean = false;\n  questionChecked: boolean = false;\n\n  constructor(private irregularVerbsService: IrregularVerbsService) {}\n\n  ngOnInit(): void {\n    this.init();\n  }\n\n  private init() {\n    this.irregularVerbsService\n      .getVerbs()\n      .subscribe((data) => (this.verbs = data));\n  }\n\n  toggle(verb: IrregularVerb, form: VerbForm) {\n    verb.toggle(form);\n  }\n\n  initQuestionMode() {\n    this.init();\n    this.questionChecked = false;\n  }\n\n  checkAnswers() {\n    let result = this.verbs.reduce(\n      (sum, verb) => {\n        let right = 0,\n          wrong = 0;\n\n        if (verb.check(verb.pastSimple)) {\n          right++;\n        } else {\n          wrong++;\n        }\n\n        if (verb.check(verb.pastParticiple)) {\n          right++;\n        } else {\n          wrong++;\n        }\n        return [sum[0] + right, sum[1] + wrong];\n      },\n      [0, 0]\n    );\n\n    alert(`You got ${result[0]} verbs right, and got ${result[1]} wrong`);\n    this.questionChecked = true;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { IrregularVerb } from './IrregularVerb.class';\n\ninterface IrregularVerbsData {\n  verbs: string[][];\n}\n\n@Injectable({ providedIn: 'root' })\nexport class IrregularVerbsService {\n  getVerbs(): Observable<IrregularVerb[]> {\n    return this.http\n      .get<IrregularVerbsData>('/assets/irregularVerbs.json')\n      .pipe(\n        map((value) =>\n          value.verbs\n            .map((v) => new IrregularVerb(v[0], v[1], v[2]))\n            .sort(() => Math.random() - 0.5)\n        )\n      );\n  }\n\n  constructor(private http: HttpClient) {}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["AppComponent","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","HttpClientModule","FormsModule","BrowserModule","HeaderComponent","AppRoutingModule","IrregularVerbsComponent","AppModule","bootstrap","declarations","imports","constructor","ngOnInit","HeaderComponent_Template","ɵɵtext","RouterModule","routes","path","component","forRoot","i1","exports","IrregularVerb","base","pastSimple","pastParticiple","verb","show","answer","getValue","verbForm","isShow","toggle","check","toLowerCase","trim","ɵɵadvance","ɵɵtextInterpolate","verb_r2","ɵɵlistener","IrregularVerbsComponent_tr_20_span_5_Template_input_ngModelChange_1_listener","$event","ɵɵrestoreView","_r10","ɵɵnextContext","$implicit","ɵɵresetView","ɵɵproperty","ctx_r4","questionChecked","IrregularVerbsComponent_tr_20_span_8_Template_input_ngModelChange_1_listener","_r15","ctx_r6","IrregularVerbsComponent_tr_20_Template_td_click_3_listener","restoredCtx","_r18","ctx_r17","ɵɵtemplate","IrregularVerbsComponent_tr_20_span_4_Template","IrregularVerbsComponent_tr_20_span_5_Template","IrregularVerbsComponent_tr_20_Template_td_click_6_listener","ctx_r19","IrregularVerbsComponent_tr_20_span_7_Template","IrregularVerbsComponent_tr_20_span_8_Template","ctx_r0","questionMode","IrregularVerbsComponent_button_21_Template_button_click_0_listener","_r21","ctx_r20","checkAnswers","irregularVerbsService","verbs","init","getVerbs","subscribe","data","form","initQuestionMode","result","reduce","sum","right","wrong","alert","ɵɵdirectiveInject","IrregularVerbsService","IrregularVerbsComponent_Template","IrregularVerbsComponent_Template_input_ngModelChange_8_listener","IrregularVerbsComponent_Template_input_click_8_listener","IrregularVerbsComponent_tr_20_Template","IrregularVerbsComponent_button_21_Template","map","http","get","pipe","value","v","sort","Math","random","ɵɵinject","HttpClient","factory","ɵfac","providedIn","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}